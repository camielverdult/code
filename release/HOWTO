This file explains how to build a release for Groove.

0) Update the version in the GROOVE source, by changing the files in
   src/main/resources/version.

1) Update the versionId in the GROOVE source project POM.

2) Update the groove-version property in the release project POM.

3) Update the include/CHANGES file in the groove-release project
   to reflect all changes with respect to the previous release

4) [Optional] Update include/usermanual.pdf file in the groove-release project.

5) [Optional] Update include/groove2tikz.sty file in the groove-release project.
   This is done by running the TikzStyleExtractor class in the package
   groove.io.external.util. Currently, the output goes to the console, and it
   can be redirected as usual with pipes '>'. Alternatively, you can just copy
   and paste the entire output on the groove2tikz.sty file.

6) Run the JUnit tests on the GROOVE source project, using the
   "GROOVE core - all JUnit tests" launch configuration
   If you get errors complaining that the test packages are not in the module,
   in Eclipse do Project -> Clean -> groove and try again. Only proceed if all tests pass.

7) Compile GROOVE by running Maven on the GROOVE source project
   (ensuring that all dependencies are Maven-based).
   Either use the "GROOVE core - do all" launch configuration
   or see the INSTALL notes in that project

Steps 8 and 9 can be combined by running "GROOVE release - do all"

8) Package GROOVE by running Maven in the groove-release project.
   Either use the "GROOVE release - zip em up" launch configuration or run
   mvn clean package -Dgroove-basedir=PATH/TO/GROOVE/PROJECT

9) Deploy GROOVE by running Maven in the groove-release/upload project.
   Either use the "GROOVE release - upload all to sourceforge" launch group or
   the individual launch configurations in there. Note that you have to enter
   the SourceForge password and then silently wait for the upload to finish

10) In SourceForge, log into the Groove project and set the new default download.
   Go to (Files). Select folder 'groove' and  then the folder with the new 
   version number. Click on the i-icon of the file 'groove-x_y_z-bin.zip', click 
   on 'Select All' and save.

11) In the GROOVE source project, reset the nl.utwente.groove.util.Version.NUMBER
   and the versionId in the GROOVE source project POM by adding a -SNAPSHOT prefix
   (to prevent intermediate builds from overwriting the local repository)

12) Commit and tag the new groove and groove-release versions in SVN using release-x_y_z
